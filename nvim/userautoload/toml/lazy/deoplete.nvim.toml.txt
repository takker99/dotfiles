[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1
hook_source = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete_delay = 0
let g:deoplete#auto_complete_start_length = 1
let g:deoplete#enable_camel_case = 1
let g:deoplete#enable_ignore_case = 0
let g:deoplete#enable_refresh_always = 0
let g:deoplete#enable_smart_case = 1
let g:deoplete#file#enable_buffer_path = 1
let g:deoplete#max_list = 10000
inoremap <silent><expr> <TAB>
\ pumvisible() ? "\<C-n>" :
\ <SID>check_back_space() ? "\<TAB>" :
\ deoplete#manual_complete()
    function! s:check_back_space() abort
        let col = col('.') - 1
        return !col || getline('')[col - 1]  =~ '\s'
    endfunction
" cf.https://qiita.com/arwtyxouymz0110/items/b09ef1ed7a2f7bf1c5e6#deopletenvim
" <S-TAB>: completion back.
inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
" <C-e>: popup cancel
inoremap <expr><C-e>       deoplete#cancel_popup()

    call deoplete#custom#source('_', 'matchers',
            ['matcher_head'])
    call deoplete#custom#source('_', 'converters', [
            \ 'converter_remove_paren',
            \ 'converter_remove_overlap',
            \ 'matcher_length',
            \
            'converter_truncate_abbr',
            \
            'converter_truncate_menu',
            \
            'converter_auto_delimiter',
            \
    ])
    call
    deoplete#custom#option('keyword_patterns',
            {
            \
            '_':
            '[a-zA-Z_]\k*\(?',
            \
            'tex':
            '[^\w|\s][a-zA-Z_]\w*',
            \
            })
call
'''

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
Repo = 'Shougo/neco-vim'
