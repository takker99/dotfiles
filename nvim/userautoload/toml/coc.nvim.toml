[[plugins]]
repo = 'neoclide/coc.nvim'
merge = 0
rev = 'release'
hook_add = '''
" Note: g:coc_config_homeはbasic.vimに記述。
" cf. https://drumato.hatenablog.com/entry/2019/04/01/121139
" use <tab> for trigger completion and navigate to next complete item
function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~# '\s'
endfunction

inoremap <silent><expr> <TAB>
  \ pumvisible() ? "\<TAB>" :
  \ coc#expandableOrJumpable() ? "\<C-r>=coc#rpc#request('doKeymap', ['snippets-expand-jump',''])\<CR>" :
  \ <SID>check_back_space() ? "\<TAB>" :
  \ coc#refresh()

inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

nnoremap <silent> <space><space> :<C-u>CocList<cr>

" " cf. https://qiita.com/maguro_tuna/items/70814d99aef8f1ddc8e9
" inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm() : "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
inoremap <silent><expr> <cr> "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

" mapping for snippets
" let g:coc_snippet_next="<Tab>"
" let g:coc_snippet_prev="<S-Tab>"

" coc-actions
" Remap for do codeAction of selected region
function! s:cocActionsOpenFromSelected(type) abort
  execute 'CocCommand actions.open ' . a:type
endfunction
xmap <silent> <leader>a :<C-u>execute 'CocCommand actions.open ' . visualmode()<CR>
nmap <silent> <leader>a :<C-u>set operatorfunc=<SID>cocActionsOpenFromSelected<CR>g@

" navigate diagnostics
nnoremap <silent> [c <Plug>(coc-diagnostic-prev)
nnoremap <silent> ]c <Plug>(coc-diagnostic-next)

" call submode#enter_with('COCMODE', 'n', '', '<leader>c', '<C-w>>')
" call submode#enter_with('COCMODE', 'n', '', 's<', '<C-w><')
" call submode#enter_with('COCMODE', 'n', '', 's+', '<C-w>+')
" call submode#enter_with('COCMODE', 'n', '', 's-', '<C-w>-')
" call submode#map('COCMODE', 'n', '', '>', '<C-w>>')
" call submode#map('COCMODE', 'n', '', '<', '<C-w><')
" call submode#map('COCMODE', 'n', '', '+', '<C-w>+')
" call submode#map('COCMODE', 'n', '', '-', '<C-w>-')
"スペースhでHover
"
nnoremap <silent> <leader>h :<C-u>call CocAction('doHover')<cr>
""スペースdfでDefinition
nnoremap <silent> <leader>df <Plug>(coc-definition)
"スペースrfでReferences
nnoremap <silent> <leader>rf <Plug>(coc-references)
nnoremap <silent>  <Plug>(coc-rename)
"スペースfmtでFormat
nnoremap <silent> <leader>fmt <Plug>(coc-format)
'''
